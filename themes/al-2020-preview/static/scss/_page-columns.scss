.page-columns main {
    // There's a strange hugo bug that generates empty `<p>`s when using shortcodes:
    // https://github.com/gohugoio/hugo/issues/1642
    // This works around that bug.
    &> p {
        display: none;
    }
    
    @extend %main-container;

    @include MQ(M) {
        display: flex;
        justify-content: space-between;
        // align-items: flex-start; // toggle me to align column heights
    }

    .column {
        background-color: $color-white-translucent;
        margin-bottom: 15px;
        padding: 9px 8px;

        @include MQ(M) {
            padding: 1.3vw;
            width: 28.4vw;
            max-width: calc(#{$max-component-width} * 0.288);
        }

        @include MQ(L) {
            padding: calc(#{$max-component-width} * 0.013);
        }
    }

    h2 {
        @include font-al-black;
        color: $color-turquoise;
        text-transform: uppercase;

        font-size: 24px;
        margin-bottom: 7px;
        
        &:not(:first-child) {
            margin-top: 5px;
        }

        @include MQ(M) {
            font-size: 2.5vw;
            margin-bottom: 0.5vw;

            &:not(:first-child) {
                margin-top: 2.8vw;
            }
        }


        @include MQ(L) {
            font-size: calc(#{$max-component-width} * 0.025);
            margin-bottom: calc(#{$max-component-width} * 0.005);
            &:not(:first-child) {
                margin-top: calc(#{$max-component-width} * 0.028);
            }
        }
    }

    h3 {
        @include font-al-black;
        text-transform: uppercase;

        font-size: 15px;
        margin-top: 18px;
        margin-bottom: 3px;
        line-height: 1.2;

        @include MQ(M) {
            font-size: 1.4vw;
            margin-top: 1.5vw;
            margin-bottom: 0.4vw;
        }

        @include MQ(L) {
            font-size: calc(#{$max-component-width} * 0.014);
            margin-top: calc(#{$max-component-width} * 0.015);
            margin-bottom: calc(#{$max-component-width} * 0.004);
        }
    }

    %regular-text {
        @include font-al-regular;
        color: $color-dark;
        font-size: 14px;
        line-height: 1.3;

        @include MQ(M) {
            font-size: 1.4vw;
            line-height: 1.3;
        }
        @include MQ(L) {
            font-size: calc(#{$max-component-width} * 0.014);
        }

        a {
            color: $color-dark;

            &:hover {
                text-decoration: none;
            }
        }
    }

    p {
        @extend %regular-text;
        margin-bottom: 18px;

        &:last-child {
            margin-bottom: 0;
        }

        @include MQ(M) {
            margin-bottom: 1.8vw;
        }

        @include MQ(L) {
            margin-bottom: calc(#{$max-component-width} * 0.018);
        }

        img {
            width: 100%;

            @include MQ(M) {
                width: calc(100% + 2.6vw);
                margin-left: -1.3vw;
            }

            @include MQ(L) {
                margin-left: calc(#{$max-component-width} * -0.013);
                width: calc(100% + #{$max-component-width} * 0.013 * 2);
            }
        }
    }

    figure {
        margin: 1vw 0;
        
        img {
            width: 100%;
        }
    }

    ul {
        list-style-type: disc;

        li {
            @extend %regular-text;
            margin-left: 20px;
            margin-bottom: 7px;

            @include MQ(M) {
                margin-left: 1.9vw;
                margin-bottom: 0.8vw;
            }

            @include MQ(L) {
                margin-left: calc(#{$max-component-width} * 0.019);
                margin-bottom: calc(#{$max-component-width} * 0.008);
            }
        }
    }
}