// generally:
// <M: two rows for navigation links
// M-L: one row of nav links, scaling up with viewport
// >L: fixed at max width
header {
    width: 98vw;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 5.4vw;

    @include MQ(M) {
        width: 94vw;
        max-width: calc(#{$max-component-width} * 0.94);
        margin-top: -1vw;
    }
    
    @include MQ(L) {
        margin-top: -13px;
        margin-bottom: calc(#{$max-component-width} * 0.054);
    }

    ul li {
        float: left;
        width: 49vw;
        position: relative; // important for the submenu

        @include IMQ(M) {
            margin-bottom: -2.7vw;

            &:nth-child(even) a img {
                margin-left: -1vw;
            }
        }

        @include MQ(M) {
            width: 23.5vw;
            max-width: calc(#{$max-component-width} * 0.235);
        }
        
        a {
            text-decoration: none;
            
            img {
                width: 52vw;
                margin-left: -1vw;

                @include MQ(M) {
                    width: 25.5vw;
                    max-width: calc(1100px * 0.255);
                    margin-left: calc((25.5vw - 23.5vw) / -2); // this is -(img-width - li-width) / 2
                }
                @include MQ(L) {
                    // calculated following the calculations from above, applied to `max-width`s
                    margin-left: calc(((1100px * 0.255) - (1100px * 0.235)) / -2);
                }
            }
        }
        
        a.active, a:hover {
            img {
                display: none;
            }
            img.active {
                display: inline !important;
            }
        }

        // submenu
        ul {
            &.inactive {
                display: none;
            }
            
            position: absolute;
            margin-top: -3.5vw;

            li {
                display: block;
                // border: 1px solid red;
                height: 12.7vw;
                margin-left: -0.4vw;

                &:nth-child(2) { margin-left: -0.8vw; }
                &:nth-child(3) { margin-left: -1.2vw; }
                &:nth-child(4) { margin-left: -1.6vw; }
            }

            @include MQ(M) {
                margin-top: -1.85vw;
                li {
                    height: 4.8vw;
                }
            }

            // maxes
            @include MQ(L) {
                margin-top: calc(#{$max-component-width} * -0.0185);
                li {
                    height: calc(#{$max-component-width} * 0.048);
                    margin-left: calc(#{$max-component-width} * -0.004);
                    &:nth-child(2) { margin-left: calc(#{$max-component-width} * -0.008); }
                    &:nth-child(3) { margin-left: calc(#{$max-component-width} * -0.012); }
                    &:nth-child(4) { margin-left: calc(#{$max-component-width} * -0.016); }
                }
            }
        }
    }

    h1 {
        margin: 0 auto;
        clear: both;
        width: 75vw;
        padding-top: 10vw;

        @include MQ(M) {
            width: 30vw;
            max-width: calc(#{$max-component-width} * 0.3);    
            padding-top: 20px;
        }

        img {
            width: 100%;
        }
    }
}